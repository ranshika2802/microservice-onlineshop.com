spring:
  application:
    name: customer-service
  data:
    redis:
      host: redis
      port: 6379
      timeout: 60000
  cloud:
    openfeign:
      client:
        config:
          default:
            loggerLevel: FULL
server:
  port: 0
#  port: 8082

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{traceId:-},%X{spanId:-}]"
  level:
    root: info
    io.micrometer.tracing: DEBUG
    org.springframework.boot.actuate.autoconfigure.tracing: DEBUG
    com.rajat.customer_service: debug
    io.github.resilience4j.circuitbreaker: DEBUG
    io.github.resilience4j.retry: DEBUG
    io.github.resilience4j: DEBUG

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
  endpoint:
    health:
      show-details: always
  #zipkin
  zipkin:
    tracing:
      endpoint: http://zipkin:9411/api/v2/spans
  tracing:
    enabled: true
    sampling:
      probability: 1.0

resilience4j:
  circuitbreaker:
    circuit-breaker-aspect-order: 400
    instances:
      viewService:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        recordExceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - feign.RetryableException

  retry:
    retry-aspect-order: 401
    instances:
      viewService:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        retryExceptions:
          - java.net.ConnectException
          - java.net.SocketTimeoutException
          - feign.RetryableException

eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://discovery-server:8761/eureka/

  instance:
    secure-port-enabled: false
    prefer-ip-address: true
#    hostname: localhost



